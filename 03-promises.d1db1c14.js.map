{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAYtC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAgBtC,OAdgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EACEd,EAAAiB,OAAOC,QAAQ,uBAAqBV,QAAiBC,QAGvDM,EACEf,EAAAiB,OAAOE,QAAQ,sBAAoBX,QAAeC,OAAW,GAGhEA,EAAM,G,CAzBAN,SAASC,cAAc,QAE/BgB,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,IAAIC,GAASrB,EAAWsB,MACxB,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAOkB,MAAOC,IACjClB,EAAckB,EAAGF,GACjBA,IAAUlB,EAAKmB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  let count = +firstDelay.value;\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, count)\n    count += +step.value;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        );\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","failure","addEventListener","e","preventDefault","count","value","i"],"version":3,"file":"03-promises.d1db1c14.js.map"}