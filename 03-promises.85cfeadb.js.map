{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAYtC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAgBtC,OAdgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EACEd,EAAAiB,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAG/DM,EACEf,EAAAiB,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAG7DA,E,IAzBMN,SAASC,cAAc,QAE/BiB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAEF,IADA,IAAIC,GAAStB,EAAWuB,MACfC,EAAI,EAAGA,GAAKpB,EAAOmB,MAAOC,IACjCnB,EAAcmB,EAAGF,GACjBA,IAAUnB,EAAKoB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  let count = +firstDelay.value;\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, count)\n    count += +step.value;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        );\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","addEventListener","e","preventDefault","count","value","i"],"version":3,"file":"03-promises.85cfeadb.js.map"}